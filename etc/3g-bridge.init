#!/bin/bash
#
# 3g-bridge     This shell script takes care of starting and stopping
#               3g-bridge. This is a RedHat style init script.
#
# chkconfig: 2345 90 10
# description: 3g-bridge connects various grid infrastructures
# processname: bridge
# config: /etc/3g-bridge.conf
# pidfile: Read in the config file

# Source function library.
. /etc/rc.d/init.d/functions

#-----------------------------------------------------------------------------
#  Installation by 'rpm  -i'      is in '/usr/sbin'
#  Installation by 'make install' is in '/usr/local/bin'
#-----------------------------------------------------------------------------
exec_3g_bridge=/usr/sbin/3g-bridge
conf_3g_bridge=/etc/3g-bridge.conf
if [ -r /usr/local/sbin/3g-bridge ]; then
  if [ /usr/local/sbin/3g-bridge -nt /usr/sbin/3g-bridge ]; then
    exec_3g_bridge=/usr/local/sbin/3g-bridge
    conf_3g_bridge=/usr/local/etc/3g-bridge.conf
  fi
fi

[ -f "$exec_3g_bridge" ] || exit 0
[ -f "$conf_3g_bridge" ] || exit 0

RETVAL=0
prog=3g-bridge
user=3g-bridge
#-----------------------------------------------------------------------------
#  In the configuration file, read the path of 'pidfile' and 'logfile'
#-----------------------------------------------------------------------------
pidfile_pattern="^ *pid-file *= *\([^ ]*bridge.pid\) *$"
pidfile="$(grep  "$pidfile_pattern"  "$conf_3g_bridge"  |  head  -1  |  \
           sed  -e "s|$pidfile_pattern|\1|")"

logfile_pattern="^ *log-target *= *\([^ ]*bridge.log\) *$"
logfile="$(grep  "$logfile_pattern"  "$conf_3g_bridge"  |  head  -1  |  \
           sed  -e "s|$logfile_pattern|\1|")"

stuck_pattern_1=".*DEBUG: \\[LogMon\\] config: .$(dirname "$logfile")/monitor.log.->.* (xml)"
stuck_pattern_2=".*DEBUG: \\[LogMon\\] Semaphore ./mon-log-lock--default. has been successfully created; closing it."
[ "$pidfile" ] || exit 1
[ "$logfile" ] || exit 1


start() {
	# Start daemons.

	echo -n $"Starting $prog: "
	if ! test -f "$pidfile" ; then
	    touch "$pidfile"
	    chown $user "$pidfile"
	    if [ -x /usr/sbin/selinuxenabled ] && /usr/sbin/selinuxenabled; then
		/sbin/restorecon "$pidfile"
	    fi
	fi
	while true; do
		daemon --user $user "$exec_3g_bridge" -c "$conf_3g_bridge"
		RETVAL=$?
		echo
		sleep 2
    logfile_last_line="$(tail -1 "$logfile")"
		expr  "$logfile_last_line"  :  "$stuck_pattern_1"  > /dev/null  ||  \
		expr  "$logfile_last_line"  :  "$stuck_pattern_2"  > /dev/null  ||  break
		echo -n $"Shutting down $prog STUCK with 'LogMon': "
		killproc "$prog"
		echo
		echo -n $"Starting $prog: "
	done
        [ $RETVAL -eq 0 ] && touch /var/lock/subsys/3g-bridge
	return $RETVAL
}

reload() {
	# Stop daemons.
    	echo -n $"reloading $prog: "
	if pidfileofproc "$exec_3g_bridge"; then
		killproc "$prog" -HUP
	else
		failure $"Reloading $prog"
	fi
		RETVAL=$?
	echo
	return $RETVAL
}

stop() {
	# Stop daemons.
	echo -n $"Shutting down $prog: "
	killproc "$prog"
	RETVAL=$?
	echo
	[ $RETVAL -eq 0 ] && rm -f /var/lock/subsys/3g-bridge
	return $RETVAL
}

# See how we were called.
case "$1" in
  start)
	start
	;;
  stop)
	stop
	;;
  reload)
	reload
	RETVAL=$?
	;;
  restart)
	stop
	start
	RETVAL=$?
	;;
  condrestart)
	if [ -f /var/lock/subsys/3g-bridge ]; then
	    stop
	    start
	    RETVAL=$?
	fi
	;;
  status)
	status "$prog"
	RETVAL=$?
	;;
  *)
	echo $"Usage: $0 {start|stop|restart|condrestart|status}"
	exit 1
esac

exit $RETVAL
