#######################################################################
# Sample 3G bridge configuration file
#
# For the syntax, see the "Basic format of the file" and "Possible value types"
# sections of the Desktop Entry Specification at
# http://standards.freedesktop.org/desktop-entry-spec/latest/


#######################################################################
# Generic settings
[defaults]

# Log level: EMERG, ALERT, CRIT, ERROR, WARNING, NOTICE, INFO, DEBUG
log-level = DEBUG

# Optional monitor log target. Use format [file:]/some/file
monlog-target = /var/log/3g-bridge/monitor.log


#######################################################################
# Database access parameters (host, database name, user, password)
[database]

host = localhost
name = bridge
user = bridge
password = changeit!

# Max. number of database connections that can be opened simultaneously
# WARNING: setting this too low may cause deadlock.
# - For the queue manager, set it to at least 4
# - For the WS submitter, set it to at least
#   1.5 * (download-threads + service-threads)
max-connections = 20


#######################################################################
# 3G bridge parameters
[bridge]

# Where to send bridge logs. Possible values:
#	stdout			write to the standard output
#	syslog:<facility>	use syslog with the specified facility
#	[file:]/some/file	write to the speficied file
log-target = /var/log/3g-bridge/bridge.log

# Location of the PID file
pid-file = /var/run/3g-bridge.pid

# Time to sleep before the next poll if there was no work to do (seconds)
sleep-interval = 5

# Min. time between calling the "update" method of the grid plugins
# (to check for finished and cancelled jobs) (seconds)
update-interval = 10


#######################################################################
# Web service submitter settings
[wssubmitter]

# Where to send bridge logs. Possible values:
#	stdout			write to the standard output
#	syslog:<facility>	use syslog with the specified facility
#	[file:]/some/file	write to the speficied file
log-target = /var/log/3g-bridge/wssubmitter.log

# Location of the PID file
pid-file = /var/run/wssubmitter.pid

# Listening port
port = 8091

# Number of web service threads. Must be smaller than the number of database
# connections otherwise deadlocks may occur
service-threads = 3

# Number of parallel downloads
download-threads = 5

# Where to put the downloaded input files
input-dir =

# Directory for output files. When creating URLs for output files,
# output-dir is replaced with output-url-prefix
output-dir =
output-url-prefix =

# Database reread trigger files used to start downloads initiated by
# 3G Bridge
dbreread-file =

#######################################################################
# Web service monitor settings
[wsmonitor]

# Where to send bridge logs. Possible values:
#	stdout			write to the standard output
#	syslog:<facility>	use syslog with the specified facility
#	[file:]/some/file	write to the speficied file
log-target = /var/log/3g-bridge/wsmonitor.log

# Location of the PID file
pid-file = /var/run/wsmonitor.pid

# Listening port
port = 8092


#######################################################################
# Sample grid using the NULL plugin, that simply sets new jobs to running,
# running jobs to finished
[Null]
disable = true
handler = NULL


#######################################################################
# Sample grid using the DC-API plugin
[SZDG]
disable = true
handler = DC-API
dc-api-config = dc-api.conf


#######################################################################
# Sample grid using the DC-API-Single plugin
[SZDG-Single]
disable = true
handler = DC-API-Single
dc-api-config = dc-api.conf

# Optional BOINC project URL for monitoring log
project-url = http://foo.bar/project


#######################################################################
# Sample grid using the EGEE plugin
[EGEE]
disable = true
handler = EGEE
voname = desktopgrid.vo.edges-grid.eu
wmproxy-endpoint = https://wms.grid.edges-grid.eu:7443/glite_wms_wmproxy_server
myproxy_host = myproxy.host
myproxy_port = 7512
myproxy_user = bridge
myproxy_authcert = /etc/grid-security/bridge.cert
myproxy_authkey = /etc/grid-security/bridge.key
isb_url = gsiftp://foo.bar/storage/prefix/
joblogdir = /var/log/3g-bridge/logdir
joblogs = all
req_str = other.GlueCEStateStatus == "Production"


#######################################################################
# Sample grid using the XtremWeb plugin
[XWDG]
disable = true
handler = XTREMWEB
xw_https_server = xw.lri.fr
xw_https_port = 4326

# Folder for XtremWeb input and output files
xw_files_dir = /var/opt/3g-bridge/xwhep

#OBSOLETE XtremWeb-HEP client install prefix
#OBSOLETE Default value is /opt/xwhep-client-
#OBSOLETE You can set it up to /opt/xwhep-client-i.j.k
#OBSOLETE xw_client_install_prefix = /opt/xwhep-client-

#OBSOLETE Sleeping time before download in s
#OBSOLETE Default value is 20 seconds.  Increase it for larger results files
#OBSOLETE xw_sleep_time_before_download=20

#OBSOLETE Forced 'xwclean' before 'xwstatus'
#OBSOLETE xwclean_forced = true


#######################################################################
# Sample monitoring-only handler for BOINC projects
[BOINC]
handler = BOINC
project-dir =


#######################################################################
# Sample jobsource using jobwrapper
[jobwrapper]
grid = EGEE
log-target = /var/log/3g-bridge/jobwrapper.log


#######################################################################
# Sample Java plugin
[java-example]
handler = Java
disable = true
java-home =
classpath =
java-class =


#######################################################################
# Sample BES plugin
[bes-example]

handler = Java
disable = true
java-home =
classpath = activation-1.1.jar:ant-1.5.jar:ant-1.7.1.jar:ant-launcher-1.7.1.jar:bcprov-jdk15-140.jar:cis-infoprovider-1.3.0.jar:cis-u6-infoprovider-types-1.3.0.jar:common-2.0.2-20091022.092503-5.jar:commons-attributes-api-2.1.jar:commons-beanutils-1.7.0.jar:commons-cli-1.0.jar:commons-codec-1.2.jar:commons-httpclient-3.1.jar:commons-lang-1.0.jar:commons-logging-1.0.jar:crl-checking-1.0-rc1.jar:DMClientAPI-2.6-preview1.jar:DMcommon-2.6-preview1.jar:ehcache-1.2.4.jar:groovy-all-1.6.4.jar:h2-1.2.123.jar:jaxen-1.1-beta-9.jar:jdom-1.0.jar:jetty-6.1.22.jar:jetty-sslengine-6.1.22.jar:jetty-util-6.1.22.jar:jline-0.9.94.jar:jsdl-xmlbeans-1.6.jar:log4j-1.2.14.jar:mail-1.4.jar:metrix-0.2.jar:ogsabes-core-1.3.0.jar:ogsabes-types-1.3.0.jar:persistence-0.7.jar:picocontainer-1.1.jar:qdox-1.5.jar:SAMLtypes-1.1.jar:samly2-1.2.1.jar:saxon-8.6.1.jar:saxon-dom-8.6.1.jar:saxon-xpath-8.6.1.jar:securityLibrary-1.5.1.jar:servlet-api-2.5-20081211.jar:stax-api-1.0.jar:stax-utils-20040917.jar:sunxacml-1.2.jar:uas-authz-1.2.2.jar:uas-core-1.3.0.jar:uas-types-1.3.0.jar:ucc-core-1.3.0.jar:ucc-infoservice-1.3.0.jar:ucc-ogsabes-1.3.0.jar:ucc-workflow-1.3.0.jar:uvos-client-1.3.1.jar:uvos-common-1.3.1.jar:wsdl4j-1.6.1.jar:wsrflite-1.9.0.jar:wsrftypes-1.9.0.jar:wss4j-1.5.8-pre-20090717.jar:wstx-asl-3.2.4.jar:xalan-2.7.0.jar:xbean-2.2.0.jar:xbean_xpath-2.2.0.jar:xercesImpl-2.7.1.jar:xfire-aegis-1.2.6.jar:xfire-annotations-1.2.6.jar:xfire-core-1.2.6.jar:xfire-java5-1.2.6.jar:xfire-jsr181-api-1.0-M1.jar:xfire-secutils-1.3.6.jar:xfire-secutilsWithDSig-1.3.6.jar:xfire-voutils-1.3.1.jar:xfire-xmlbeans-1.2.6.jar:xml-apis-1.0.b2.jar:XmlSchema-1.1.jar:xmlsec-java6-1.4.2.jar:xnjs-module-core-1.3.0.jar:xuudb-common-1.3.0.jar:3g-bridge-plugin-0.96.jar
java-class = hu.sztaki.lpds.G3Bridge.plugin.bes.BESHandler

# external address of the FTP server
ftpserver.address = ftp://foo.bar

# path of root dir for the ftp server
ftpserver.basedir = /home/bridge

# has the FTP server anonymous usage
ftpserver.anonymous = true

# username for the FTP server (when anonymous == false)
ftpserver.username = bridge

# password for the FTP server (when anonymous == false)
ftpserver.password = bridge

## settings related the WS calling ##

# target webservice address with BES port type
beswebservice.address =  https://foo.bar:60000/arex

# user cert file (in PKCS12 format, contains public and private keys)
beswebservice.ssl.userkey.file = /home/bridge/certs/demouser.p12

# user cert password (for PKCS12 format file)
beswebservice.ssl.userkey.password = secret

# keystore file for trusted CAs (JKS format)
beswebservice.ssl.truststore.file = /home/bridge/certs/truststore.jks

# trusted keystore password (for JKS)
beswebservice.ssl.truststore.password = secret

## settings related the wrapper script ##

# is wrapper script necessary (when the copied executable file does not have permisson for running in the running environment)
beswebservice.wrapperscript.isneeded = true

# base name of new executable wrapper script (when needed)
beswebservice.wrapperscript.filename = bes_executable_

# base dir for generated wrapper scripts (be under ftpserver.basedir!)
beswebservice.wrapperscript.basedir = /home/bridge/files/wrappers


##############
# Sample EC2 plugin
[ec2-example]

handler = EC2
disable = true
#
# --> Common options for Eucalyptus and EC2
#
# user-data and user-data-file are mutually exclusive
#
user-data = http://foo.bar/cloud,2b6aef11cb946523b702f59f34b31606
#user-data-file = /var/www/userdata.zip
region = eu-west-1
ec2-certificate = /home/foobar/.ec2/cert-WLEN637UCDLKGHYUGDK2XEN745CCWMOX5.pem
ec2-private-key = /home/foobar/.ec2/pk-WLEN637UCDLKGHYUGDK2XEN745CCWMOX5.pem
ec2-home = /home/foobar/apps/ec2/ec2-api-tools-1.3-30349
java-home = /usr/
#
# <--
#
# Eucalyptus specific settings -->
#
ec2-service-url = http://foo.bar:8773/services/Eucalyptus
##
## <--
##

