<?xml version="1.0"?>
<?xml-stylesheet href="http://docbook.sourceforge.net/release/xsl/current/manpages/docbook.xsl" type="text/xsl"?>
<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN"
	"http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
]>
<refentry id="3g-bridge.conf.5" revision="29 Oct 2009">
    <refentryinfo>
	<author>
	    <personname>
		<firstname>Gábor</firstname>
		<surname>Gombás</surname>
	    </personname>
	    <email>gombasg@sztaki.hu</email>
	</author>
	<date>29 Oct 2009</date>
	<title>3g-bridge.conf</title>
	<productname>3G Bridge</productname>
	<productnumber>@PACKAGE_VERSION@</productnumber>
    </refentryinfo>

    <refmeta>
	<refentrytitle>3g-bridge.conf</refentrytitle>
	<manvolnum>5</manvolnum>
	<refmiscinfo>configuration file for the 3G Bridge</refmiscinfo>
    </refmeta>

    <refnamediv>
	<refname>3g-bridge.conf</refname>
	<refpurpose>
	    configuration file for the 3G Bridge
	</refpurpose>
    </refnamediv>

    <refsect1>
	<title>DESCRIPTION</title>
	<para>
	    This file specifies configuration options for various components of
	    the 3G Bridge suite.
	</para>
	<para>
	    The configuration file is organized into groups. Every group must
	    start with the group name enclosed in square brackets. Inside a
	    group there can be any number of key-value pairs specifying various
	    options. Lines starting with a <quote><literal>#</literal></quote>
	    are treated as comments and are ignored.
	</para>
	<para>
	    There are a number of sections, described below, that contain options
	    for specific components of the 3G Bridge suite. If a group is not
	    one of these, then it defines a target grid system where jobs can be
	    sent.
	</para>
	<para>
	    The pre-defined group names are:
	    <itemizedlist>
		<listitem>
		    <para>
			<literal>database</literal>: Database access parameters
		    </para>
		</listitem>
		<listitem>
		    <para>
			<literal>defaults</literal>: Global defaults
		    </para>
		</listitem>
		<listitem>
		    <para>
			<literal>bridge</literal>: Specific options for <command>3g-bridge</command>
		    </para>
		</listitem>
		<listitem>
		    <para>
			<literal>wssubmitter</literal>: Specific options for <command>wssubmitter</command>
		    </para>
		</listitem>
		<listitem>
		    <para>
			<literal>wsmonitor</literal>: Specific options for <command>wsmonitor</command>
		    </para>
		</listitem>
	    </itemizedlist>
	</para>
    </refsect1>

    <refsect1>
	<title>DATABASE ACCESS PARAMETERS</title>
	<para>
	    The following values can be configured in the <literal>database</literal> group:
	</para>
	<glosslist>
	    <glossentry>
		<glossterm><envar>name</envar></glossterm>
		<glossdef>
		    <para>
			The name of the MySQL database to use.
		    </para>
		</glossdef>
	    </glossentry>
	    <glossentry>
		<glossterm><envar>user</envar></glossterm>
		<glossdef>
		    <para>
			User name to use when connecting to the database. Defaults
			to the name of the current user.
		    </para>
		</glossdef>
	    </glossentry>
	    <glossentry>
		<glossterm><envar>host</envar></glossterm>
		<glossdef>
		    <para>
			The name of the host where the database is. Defaults to
			<literal>localhost</literal>.
		    </para>
		</glossdef>
	    </glossentry>
	    <glossentry>
		<glossterm><envar>password</envar></glossterm>
		<glossdef>
		    <para>
			Password for authenticating to the database.
		    </para>
		</glossdef>
	    </glossentry>
	    <glossentry>
		<glossterm><envar>max-connections</envar></glossterm>
		<glossdef>
		    <para>
			Max. number of simultaneous database connections. Setting it too low
			may cause deadlocks; setting it high usually does not cause any harm.
			The <command>3g-bridge</command> requires this limit to be at least 4;
			for the <command>wssubmitter</command>, it is recommended to set this
			limit to 1.5 times the number of download plus service threads.
		    </para>
		</glossdef>
	    </glossentry>
	</glosslist>
    </refsect1>

    <refsect1>
	<title>GLOBAL DEFAULTS</title>
	<para>
	    The following values can be configured in the <literal>defaults</literal> group.
	    The same values can also be listed in the <literal>bridge</literal>,
	    <literal>wssubmitter</literal> and <literal>wsmonitor</literal> groups, in this
	    case the values specified there override the defaults.
	</para>
	<glosslist>
	    <glossentry>
		<glossterm><envar>log-level</envar></glossterm>
		<glossdef>
		    <para>
			Specifies the minimum severity of a message to be logged. The
			value must be one of (in increasing severity order): <literal>debug</literal>,
			<literal>info</literal>, <literal>notice</literal>, <literal>warning</literal>,
			<literal>error</literal> and <literal>crit</literal>. The value is
			not case-sensitive.
		    </para>
		</glossdef>
	    </glossentry>
	    <glossentry>
		<glossterm><envar>monlog-target</envar></glossterm>
		<glossdef>
		    <para>
		      Absolute path of the file in which monitoring messages are
		      saved. Optional. If unspecified, no log is generated and
		      none of the monlog-* options below will be used.
		    </para>
		</glossdef>
	    </glossentry>
	    <glossentry>
		<glossterm><envar>monlog-format</envar></glossterm>
		<glossdef>
		    <para>
		      Either `xml' or `simple'. If unspecified, defaults to `simple'.
		    </para>
		</glossdef>
	    </glossentry>
	    <glossentry>
		<glossterm><envar>monlog-timezone</envar></glossterm>
		<glossdef>
		    <para>
		      Timezone string. Default value is GMT. Used by the xml backend.
		    </para>
		</glossdef>
	    </glossentry>
	    <glossentry>
		<glossterm><envar>monlog-rotate-interval</envar></glossterm>
		<glossdef>
		    <para>
		      Log-rotation interval in minutes. If unspecified or zero,
		      the log will not be rotated.
		    </para>
		</glossdef>
	    </glossentry>
	    <glossentry>
		<glossterm><envar>monlog-rotate-filenamefmt</envar></glossterm>
		<glossdef>
		    <para>
		      Filename format for rotated files. The first instance of
		      the string "{ts}" will be replaced with a
		      millisecond-precision timestamp. Can be either an absolute
		      or a relative path. If relative, the base directory will
		      be the directory of monlog-target. The default value is
		      `logfilename-{ts}' where logfilename is the basename of
		      monlog-target.
		    </para>
		</glossdef>
	    </glossentry>
	    <glossentry>
		<glossterm><envar>log-target</envar></glossterm>
		<glossdef>
		    <para>
			Specifies where to send log messages. Possible values:
			<itemizedlist>
			    <listitem>
				<para>
				    <literal>stdout</literal>: send all messages to the standard output.
				</para>
			    </listitem>
			    <listitem>
				<para>
				    <literal>syslog</literal>: send all messages to the system log.
				    You can also specify the syslog facility after a colon, e.g.:
				    <informalexample><literal>syslog:user</literal></informalexample>.
				    The default facility is <literal>daemon</literal>.
				</para>
			    </listitem>
			    <listitem>
				<para>
				    <literal>file:<replaceable>FILE</replaceable></literal>: write all
				    messages to the specified <replaceable>FILE</replaceable>.
				</para>
			    </listitem>
			</itemizedlist>
		    </para>
		</glossdef>
	    </glossentry>
	</glosslist>
    </refsect1>

    <refsect1>
	<title>OPTIONS FOR 3G-BRIDGE</title>

	<para>
	    The following values can be specified in the <literal>bridge</literal> group:
	</para>
	<glosslist>
	    <glossentry>
		<glossterm><envar>pid-file</envar></glossterm>
		<glossdef>
		    <para>
			Location of the pid file. When running as a daemon, the <command>3g-bridge</command>
			stores its process ID in this file.
		    </para>
		</glossdef>
	    </glossentry>
	    <glossentry>
		<glossterm><envar>sleep-interval</envar></glossterm>
		<glossdef>
		    <para>
			Time to sleep between polls of the database watching for new jobs.
		    </para>
		</glossdef>
	    </glossentry>
	    <glossentry>
		<glossterm><envar>update-interval</envar></glossterm>
		<glossdef>
		    <para>
			Minimum time between status updates of the grid plugins.
		    </para>
		</glossdef>
	    </glossentry>
	</glosslist>
    </refsect1>

    <refsect1>
	<title>OPTIONS FOR WSSUBMITTER</title>

	<para>
	    The following values can be specified in the <literal>wssubmitter</literal> group:
	</para>
	<glosslist>
	    <glossentry>
		<glossterm><envar>pid-file</envar></glossterm>
		<glossdef>
		    <para>
			Location of the pid file. When running as a daemon, the <command>wssubmitter</command>
			stores its process ID in this file.
		    </para>
		</glossdef>
	    </glossentry>
	    <glossentry>
		<glossterm><envar>port</envar></glossterm>
		<glossdef>
		    <para>
			Network port where <command>wssubmitter</command> should listen on.
		    </para>
		</glossdef>
	    </glossentry>
	    <glossentry>
		<glossterm><envar>service-threads</envar></glossterm>
		<glossdef>
		    <para>
			Number of threads to launch for servicing requests.
		    </para>
		</glossdef>
	    </glossentry>
	    <glossentry>
		<glossterm><envar>download-threads [UNUSED]</envar></glossterm>
		<glossdef>
		    <para>
		      Obsoleted by the DownloadManager plugin.
		    </para>
		</glossdef>
	    </glossentry>
	    <glossentry>
		<glossterm><envar>input-dir</envar></glossterm>
		<glossdef>
		    <para>
			Directory where the input files of submitted jobs are stored.
		    </para>
		</glossdef>
	    </glossentry>
	    <glossentry>
		<glossterm><envar>output-dir</envar></glossterm>
		<glossdef>
		    <para>
			Directory where to store the generated output files of finished
			jobs.
		    </para>
		</glossdef>
	    </glossentry>
	    <glossentry>
		<glossterm><envar>output-url-prefix</envar></glossterm>
		<glossdef>
		    <para>
			URL prefix for downloading the output files. When a remote client
			requests the list of output files for a specific job, <command>wssubmitter</command>
			replaces the value of <envar>output-dir</envar> in the file name with the
			value of <envar>output-url-prefix</envar> and reports the resulting URL.
			It is the responsibility of the system administrator to configure the
			appropriate web server such a way that the output files are really available at
			the resulting location.
		    </para>
		</glossdef>
	    </glossentry>
	    <glossentry>
		<glossterm><envar>dbreread-file [UNUSED]</envar></glossterm>
		<glossdef>
		    <para>
		      Obsoleted by the DownloadManager plugin.
		    </para>
		</glossdef>
	    </glossentry>
	</glosslist>
    </refsect1>

    <refsect1>
	<title>OPTIONS FOR WSMONITOR</title>

	<para>
	    The following values can be specified in the <literal>wsmonitor</literal> group:
	</para>
	<glosslist>
	    <glossentry>
		<glossterm><envar>pid-file</envar></glossterm>
		<glossdef>
		    <para>
			Location of the pid file. When running as a daemon, the <command>wsmonitor</command>
			stores its process ID in this file.
		    </para>
		</glossdef>
	    </glossentry>
	    <glossentry>
		<glossterm><envar>port</envar></glossterm>
		<glossdef>
		    <para>
			Network port where <command>wsmonitor</command> should listen on.
		    </para>
		</glossdef>
	    </glossentry>
	</glosslist>
    </refsect1>

    <refsect1>
	<title>DEFINING GRID INSTANCES AND PLUGINS</title>
	<para>
	    If the name of a group is not one of the values described above,
	    then it defines a grid instance where jobs can be sent or a general
	    plugin instance. For grid plugins, the name of the group is matched
	    with the grid name in the database to decide where to send a
	    specific job. For general plugins, the instance name matters only
	    when stated so in the handling plugin's specification.
	</para>
	<para>
	    Every plugin definition group must contain a value for
	    <envar>handler</envar> that decides which plugin will handle this
	    definition. The group may also contain additional definitions
	    specific to the plugin.
	</para>
	<para>
	    Currently the following plugins are available (i.e. these are the
	    allowed values for <envar>handler</envar>), provided the support for
	    the specified plugin is compiled into the
	    <command>3g-bridge</command>. If not stated otherwise, the plugin is
	    a grid handler.
	</para>

	<itemizedlist>
	  <listitem>
	    <para>
	      <literal>MonLog-BOINC</literal>: General plugin. Runs predefined
	      queries on the BOINC database periodically. Before using this
	      plugin, install the necessary indexes in the BOINC database so the
	      plugin will run efficiently. The indexes are defined in
	      <literal>db/monlog-boinc-indexes.sql</literal>
	    </para>
	  </listitem>
	  <listitem>
	    <para>
	      <literal>DownloadManager</literal>: General plugin. Handles
	      download requests of other plugins.
	    </para>
	  </listitem>
	    <listitem>
		<para>
		    <literal>DC-API</literal>: Submit jobs using DC-API with batching support.
		    The jobs must refer to applications that are using the <command>genwrapper</command>.
		</para>
	    </listitem>
	    <listitem>
		<para>
		    <literal>DC-API-Single</literal>: Submit jobs using DC-API, without batching
		    support. Any DC-API compatible applications can be submitted this way.
		</para>
	    </listitem>
	    <listitem>
		<para>
		    <literal>EGEE</literal>: Submit jobs to an EGEE VO using gLite.
		</para>
	    </listitem>
	    <listitem>
		<para>
		    <literal>XTREMWEB</literal>: Submit jobs to an XtremWeb-based desktop grid.
		</para>
	    </listitem>
	    <listitem>
		<para>
		    <literal>Java</literal>: Submit jobs using a plugin implemented in Java.
		</para>
	    </listitem>
	    <listitem>
	      <para>
		<literal>Null</literal>: Provided for testing purposes, this
		plugin does not submit jobs. Instead, the plugin simply changes
		handled jobs' statuses from INIT to RUNNING, and from RUNNING to
		FINISHED. Also, dummy output files are created matching the
		output specification in the table cg_outputs.
	      </para>
	      <para>
		If configured so, the Null handler will fail jobs with a given
		probability. In this case, no output is generated.
	      </para>
	    </listitem>
	    <listitem>
	      <para>
		<literal>Metajob</literal>: The Metajob plugin unfolds meta-jobs
		and submits the generated sub-jobs to their respective grid
		handlers.
	      </para>
	      <para>
		The name of the grid handled by this plugin MUST be [Metajob],
		as the wssubmitter will always submit meta-jobs to this
		grid. (The plugin itself does not depend on this. If the
		meta-job is inserted through a different method than
		wssubmitter, this restriction can be eliminated.)
	      </para>
	    </listitem>
	</itemizedlist>
    </refsect1>
    <refsect1>
      <title>OPTIONS FOR THE MONLOG-BOINC PLUGIN</title>
      	<para>
	  ***********
	</para>
	<glosslist>
	  <glossentry>
	    <glossterm><envar>handler</envar></glossterm>
	    <glossdef>
	      <para>MonLogBOINC</para>
	    </glossdef>
	  </glossentry>
	  <glossentry>
	    <glossterm><envar>reporting_interval</envar></glossterm>
	    <glossdef>
	      <para>Optional. Time interval between two query executions in
	      seconds. Default is 600 seconds.</para>
	    </glossdef>
	  </glossentry>
	  <glossentry>
	    <glossterm><envar>max_threads</envar></glossterm>
	    <glossdef>
	      <para>Optional. Maximum number of parallel query threads. Default
	      is 5.</para>
	    </glossdef>
	  </glossentry>
	  <glossentry>
	    <glossterm><envar>target_filenamefmt</envar></glossterm>
	    <glossdef>
	      <para>Output filename format. Its value must be an absolute path;
	      the directory must exist. The string `{ts}' will be replaced by
	      the current unix timestamp. If `{ts}' is not present, the
	      timestamp will be appended to the filename. E.g.:
	      <literal>/my/path/to/directory/filename_{ts}.xml</literal></para>
	    </glossdef>
	  </glossentry>
	  <glossentry>
	    <glossterm><envar>apps</envar></glossterm>
	    <glossdef>
	      <para>Comma separated list of application names, referencing
	      applications in the BOINC database (field [app].[name]).</para>
	    </glossdef>
	  </glossentry>
	  <glossentry>
	    <glossterm><envar>host_ident</envar></glossterm>
	    <glossdef>
	      <para>Required in the output. Identifies the from which the data
	      is originated.</para>
	    </glossdef>
	  </glossentry>
	  <glossentry>
	    <glossterm><envar>direction</envar></glossterm>
	    <glossdef>
	      <para>Optional. Required in the output. The default value is
	      `sgdg'.</para>
	    </glossdef>
	  </glossentry>
	</glosslist>

    </refsect1>
    <refsect1>
	<title>OPTIONS FOR THE DOWNLOAD MANAGER PLUGIN</title>
	<para>
	  The DownloadManager plugin handles other plugins' download
	  reqests. Reqests are queued and processed by multiple download
	  threads.	  
	</para>
	<para>
	  This plugin replaces the built-in DownloadManager of the
	  WSSubmitter. Thus, the WSSubmitter doesn't have to be started when
	  only the download service is required. Also, the dbreread file is
	  obsolete, thread communication is done inside the 3G Bridge process.
	</para>
	<para>
	  As the DownloadManager is a general plugin, it's not associated with
	  any job queue. Therefore the instance name is irrelevant.
	</para>
	<para>
	  The following attributes are used from the
	  <envar>[wssubmitter]</envar> section: <envar>input-dir</envar>.
	</para>
	<glosslist>
	  <glossentry>
	    <glossterm><envar>handler</envar></glossterm>
	    <glossdef>
	      <para>DownloadManager</para>
	    </glossdef>
	  </glossentry>
	  <glossentry>
	    <glossterm><envar>download-threads</envar></glossterm>
	    <glossdef>
	      <para>Number of concurrent downloads.</para>
	    </glossdef>
	  </glossentry>
	</glosslist>
    </refsect1>
    <refsect1>
	<title>OPTIONS FOR THE DC-API AND DC-API-SINGLE PLUGINS</title>

	<para>
	    The <literal>DC-API</literal> and <literal>DC-API-Single</literal>
	    plugins handle job submission using DC-API. The <literal>DC-API</literal>
	    plugin supports batching and requires that the application is
	    specifically prepared for batching. The <literal>DC-API-Single</literal>
	    plugin supports any DC-API application. The <literal>DC-API-Single</literal>
	    plugin makes use of the <literal>_3G_BRIDGE_BATCH_ID</literal> environment
	    variable and sets is as the batch identifier of the submitted workunit.
	</para>
	<glosslist>
	    <glossentry>
		<glossterm><envar>dc-api-config</envar></glossterm>
		<glossdef>
		    <para>
			Location of the config file for the DC-API. If not specified, the DC-API
			default is used, which is <filename>dc-api.conf</filename> in the current
			directory. Note that when running as a daemon, the <command>3g-bridge</command>
			switches to the root directory, so the default value will not work, and a file
			with an absolute path name must be specified here. Documentation of this file
			can be found in the
			<ulink url="http://www.desktopgrid.hu/storage/dcdoc/backends.html#boinc">DC-API BOINC backend manual</ulink>.
		    </para>
		</glossdef>
	    </glossentry>
	    <glossentry>
		<glossterm><envar>project-url</envar></glossterm>
		<glossdef>
		    <para>
			Optional variable for monitoring-related logging when using the BOINC DC-API
			backend. The value of the variable is added to the monitoring logs.
		    </para>
		</glossdef>
	    </glossentry>
	</glosslist>
	<para>
	    Beside the above variables, the <literal>DC-API</literal> plugin requires additional
	    configuration variables in the <filename>dc-api.conf</filename> file. These variables
	    are the followings:
	</para>
	<glosslist>
	    <glossentry>
		<glossterm><envar>BatchPackScript</envar></glossterm>
		<glossdef>
		    <para>
			This variable defines the location of batch input package creation script, and
			can be specified in the <literal>Master</literal> section of <filename>dc-api.conf</filename>,
			but can be overridden in the per-application configurations.
			The script should parse the following command-line arguments:
			<orderedlist numeration="lowerroman">
			    <listitem>
				<para>base directory where input files are stored</para>
			    </listitem>
			    <listitem>
				<para>name of the input package file</para>
			    </listitem>
			    <listitem>
				<para>pattern to match files to be included</para>
			    </listitem>
			    <listitem>
				<para>pattern to match files to be included</para>
			    </listitem>
			    <listitem>
				<para>...</para>
			    </listitem>
			</orderedlist>
		    </para>
		</glossdef>
	    </glossentry>
	    <glossentry>
		<glossterm><envar>BatchUnPackScript</envar></glossterm>
		<glossdef>
		    <para>
			This variable defines the location of batch output package unpack script, and
			can be specified in the <literal>Master</literal> section of <filename>dc-api.conf</filename>,
			but can be overridden in the per-application configurations.
			The script should parse the following command-line arguments:
			<orderedlist>
			    <listitem>
				<para>location of batch output package file to unpack</para>
			    </listitem>
			    <listitem>
				<para>location where the batch output should be unpacked to</para>
			    </listitem>
			</orderedlist>
		    </para>
		</glossdef>
	    </glossentry>
	    <glossentry>
		<glossterm><envar>BatchHeadTemplate</envar></glossterm>
		<glossdef>
		    <para>
			This per-application variable defines the location of the batch head script for a given application. This script
			is used as the head of the batch job script. A typical task of this script
			is to unpack the batch input package before jobs of the batch are
			executed. The template may define one key in the form of <literal>%{inputs}</literal>,
			which will be replaced with the name of the batch input package file.
		    </para>
		</glossdef>
	    </glossentry>
	    <glossentry>
		<glossterm><envar>BatchBodyTemplate</envar></glossterm>
		<glossdef>
		    <para>
			This per-application variable defines the location of the batch job template script for a given application.
			The script is responsible for executing one job within a batch. The template
			may define the following keys:
			<itemizedlist>
			    <listitem>
				<para>
				    <literal>%{input_dir}</literal>: location of the job's input
				    directory within the unpacked batch input directory structure.
				</para>
			    </listitem>
			    <listitem>
				<para>
				    <literal>%{output_dir}</literal>: location of the job's output
				    directory.
				</para>
			    </listitem>
			    <listitem>
				<para>
				    <literal>%{args}</literal>: command-line arguments to the job.
				</para>
			    </listitem>
			</itemizedlist>
		    </para>
		</glossdef>
	    </glossentry>
	    <glossentry>
		<glossterm><envar>BatchTailTemplate</envar></glossterm>
		<glossdef>
		    <para>
			This per-application variable defines the location of the batch tail script for a given application. The task of
			this script is to create the batch output package of output files produced
			by the jobs. The tamplate may define the following keys:
			<itemizedlist>
			    <listitem>
				<para>
				    <literal>%{outputs}</literal>: name of the batch output package
				    file.
				</para>
			    </listitem>
			    <listitem>
				<para>
				    <literal>%{output_pattern}</literal>: pattern that can be used
				    to find the files to place into the output package file.
				</para>
			    </listitem>
			</itemizedlist>
		    </para>
		</glossdef>
	    </glossentry>
	</glosslist>
    </refsect1>

    <refsect1>
	<title>OPTIONS FOR THE EGEE PLUGIN</title>

	<para>
	    The <literal>EGEE</literal> plugin handles job submission using gLite.
	</para>
	<glosslist>
	    <glossentry>
		<glossterm><envar>wmproxy-endpoint</envar></glossterm>
		<glossdef>
		    <para>
			URL of the WMS service.
		    </para>
		</glossdef>
	    </glossentry>
	    <glossentry>
		<glossterm><envar>voname</envar></glossterm>
		<glossdef>
		    <para>
			Name of the VO (Virtual Organization) where the job should be sent.
		    </para>
		</glossdef>
	    </glossentry>
	    <glossentry>
		<glossterm><envar>myproxy_host</envar></glossterm>
		<glossdef>
		    <para>
			Name of the host where MyProxy runs.
		    </para>
		</glossdef>
	    </glossentry>
	    <glossentry>
		<glossterm><envar>myproxy_port</envar></glossterm>
		<glossdef>
		    <para>
			The port of the MyProxy server. Defaults to 7512.
		    </para>
		</glossdef>
	    </glossentry>
	    <glossentry>
		<glossterm><envar>myproxy_user</envar></glossterm>
		<glossdef>
		    <para>
			User name used when authenticating to MyProxy.
		    </para>
		</glossdef>
	    </glossentry>
	    <glossentry>
		<glossterm><envar>myproxy_authcert</envar></glossterm>
		<glossdef>
		    <para>
			X.509 certificate used for authenticating to MyProxy.
		    </para>
		</glossdef>
	    </glossentry>
	    <glossentry>
		<glossterm><envar>myproxy_authkey</envar></glossterm>
		<glossdef>
		    <para>
			The private key for the certificate used for authenticating to MyProxy.
		    </para>
		</glossdef>
	    </glossentry>
	    <glossentry>
		<glossterm><envar>isb_url</envar></glossterm>
		<glossdef>
		    <para>
			URL prefix for the input sandbox.
		    </para>
		</glossdef>
	    </glossentry>
	    <glossentry>
		<glossterm><envar>joblogdir</envar></glossterm>
		<glossdef>
		    <para>
			Directory prefix for the job log files. EGEE plugin places some EGEE-related
			logging information (e.g. status query, detailed logging information, etc.).
			Log files will be placed into this directory following the JOBID.log filename
			scheme.
		    </para>
		</glossdef>
	    </glossentry>
	    <glossentry>
		<glossterm><envar>joblogs</envar></glossterm>
		<glossdef>
		    <para>
			Specifies the logging level to be used for files in joblogdir. 'none' means
			nothing should be logged, 'error' means error messages and related inspection
			information should be logged, 'all' means everything should be logged. This
			latter includes logging status changes and EGEE logging information printing.
		    </para>
		</glossdef>
	    </glossentry>
	    <glossentry>
		<glossterm><envar>req_str</envar></glossterm>
		<glossdef>
		    <para>
			Requirements string to be included into the JDL of submitted jobs.
		    </para>
		</glossdef>
	    </glossentry>
	</glosslist>
    </refsect1>

    <refsect1>
	<title>OPTIONS FOR THE XTERMWEB PLUGIN</title>

	<para>
	    The <literal>XTREMWEB</literal> plugin handles job submission to XtremWeb.
	</para>
	<glosslist>
	    <glossentry>
		<glossterm><envar>xw_client_install_prefix</envar></glossterm>
		<glossdef>
		    <para>
			Path and directory of the installed XtremWeb Client.
		    </para>
		</glossdef>
	    </glossentry>
	    <glossentry>
		<glossterm><envar>xw_files_dir</envar></glossterm>
		<glossdef>
		    <para>
			Path and directory for XtremWeb input and output files.
		    </para>
		</glossdef>
	    </glossentry>
	</glosslist>
    </refsect1>

    <refsect1>
	<title>OPTIONS FOR THE BOINC PLUGIN</title>

	<para>
	    The <literal>BOINC</literal> plugin supports the monitoring of BOINC
	    projects.
	</para>
	<glosslist>
	    <glossentry>
		<glossterm><envar>project-dir</envar></glossterm>
		<glossdef>
		    <para>
			The location of the project's root directory.
		    </para>
		</glossdef>
	    </glossentry>
	</glosslist>
    </refsect1>

    <refsect1>
	<title>OPTIONS FOR THE JAVA PLUGIN</title>

	<para>
	    The Java plugin is special as it is not a real plugin but rather an interface for writing plugins
	    in Java. It has the following configuration options.
	</para>
	<glosslist>
	    <glossentry>
		<glossterm><envar>classpath</envar></glossterm>
		<glossdef>
		    <para>
			The classpath needed for locating the plugin and its dependencies. The location
			of the JAR file that contains the hu.sztaki.lpds.G3Bridge package is always added.
		    </para>
		</glossdef>
	    </glossentry>
	    <glossentry>
		<glossterm><envar>java-home</envar></glossterm>
		<glossdef>
		    <para>
			Location of the Java Runtime Environment (JRE). Defaults to the value of the 
			<envar>JAVA_HOME</envar> environment variable. The Java plugin searches for the
			<filename>libjvm.so</filename> library recursively inside this directory.
		    </para>
		</glossdef>
	    </glossentry>
	    <glossentry>
		<glossterm><envar>java-class</envar></glossterm>
		<glossdef>
		    <para>
			Mandatory. The name of the Java class that implements the plugin functionality. This class must
			be a descendant of hu.sztaki.lpds.G3Bridge.GridHandler, and it must have a constructor
			taking a single String argument (the name of the plugin instance).
		    </para>
		</glossdef>
	    </glossentry>
	</glosslist>
	<para>
	    In addition to the items listed above you can also add configuration items specific to the
	    plugin implementation here.
	</para>
    </refsect1>

    <refsect1>
	<title>OPTIONS FOR THE BES PLUGIN</title>

	<para>
	    The BES (Basic Execution Service) plugin is based on the Java plugin and supports the usage of BES-compatible
	    resources, such as UNICORE or ARC A-REX services. It has the following configuration options.
	</para>
	<glosslist>
	    <glossentry>
		<glossterm><envar>classpath</envar></glossterm>
		<glossdef>
		    <para>
			The classpath needed for locating the BES plugin and its dependencies. The location
			of the JAR file that contains the hu.sztaki.lpds.G3Bridge package is always added.
			Besides this, all JAR files needed for a BES client have to be enumerated here.
		    </para>
		</glossdef>
	    </glossentry>
	    <glossentry>
		<glossterm><envar>java-home</envar></glossterm>
		<glossdef>
		    <para>
			Location of the Java Runtime Environment (JRE). Defaults to the value of the 
			<envar>JAVA_HOME</envar> environment variable. The Java plugin searches for the
			<filename>libjvm.so</filename> library recursively inside this directory.
		    </para>
		</glossdef>
	    </glossentry>
	    <glossentry>
		<glossterm><envar>java-class</envar></glossterm>
		<glossdef>
		    <para>
			Mandatory. The name of the Java class that implements the BES plugin functionality. This class must
			be hu.sztaki.lpds.G3Bridge.plugin.BESHandler for a BES plugin.
		    </para>
		</glossdef>
	    </glossentry>
	    <glossentry>
		<glossterm><envar>ftpserver.address</envar></glossterm>
		<glossdef>
		    <para>
			The public address of the FTP server where BES resources can download input files from or can
			upload output files to.
		    </para>
		</glossdef>
	    </glossentry>
	    <glossentry>
		<glossterm><envar>ftpserver.basedir</envar></glossterm>
		<glossdef>
		    <para>
			The base directory of the FTP server available through <envar>ftpserver.address</envar>.
		    </para>
		</glossdef>
	    </glossentry>
	    <glossentry>
		<glossterm><envar>ftpserver.anonymous</envar></glossterm>
		<glossdef>
		    <para>
			Boolean value indicating if anonymous FTP access should be used or not. A-REX resources support
			only this kind of FTP operation. Possible values are true and false.
		    </para>
		</glossdef>
	    </glossentry>
	    <glossentry>
		<glossterm><envar>ftpserver.username</envar></glossterm>
		<glossdef>
		    <para>
			In case of <envar>ftpserver.anonymous</envar> is false, this value contains the username to
			log in to the FTP server.
		    </para>
		</glossdef>
	    </glossentry>
	    <glossentry>
		<glossterm><envar>ftpserver.password</envar></glossterm>
		<glossdef>
		    <para>
			In case of <envar>ftpserver.anonymous</envar> is false, this value contains the password to
			log in to the FTP server.
		    </para>
		</glossdef>
	    </glossentry>
	    <glossentry>
		<glossterm><envar>beswebservice.address</envar></glossterm>
		<glossdef>
		    <para>
			This variable contains the URL of the BES service to be used by the plugin.
		    </para>
		</glossdef>
	    </glossentry>
	    <glossentry>
		<glossterm><envar>beswebservice.ssl.userkey.file</envar></glossterm>
		<glossdef>
		    <para>
			This variable contains the full path of the user key file to be used for connecting to the
			service in PKCS12 format.
		    </para>
		</glossdef>
	    </glossentry>
	    <glossentry>
		<glossterm><envar>beswebservice.ssl.userkey.password</envar></glossterm>
		<glossdef>
		    <para>
			This variable contains the password belonging to the user key specified in
			<envar>beswebservice.ssl.userkey.file</envar>.
		    </para>
		</glossdef>
	    </glossentry>
	    <glossentry>
		<glossterm><envar>beswebservice.ssl.truststore.file</envar></glossterm>
		<glossdef>
		    <para>
			This variable contains the path to the trusted CA keystore in JKS format.
		    </para>
		</glossdef>
	    </glossentry>
	    <glossentry>
		<glossterm><envar>beswebservice.ssl.truststore.password</envar></glossterm>
		<glossdef>
		    <para>
			This variable contains the password belonging to the truststore specified in
			<envar>beswebservice.ssl.truststore.file</envar>.
		    </para>
		</glossdef>
	    </glossentry>
	    <glossentry>
		<glossterm><envar>beswebservice.wrapperscript.isneeded</envar></glossterm>
		<glossdef>
		    <para>
			This boolean value indicates if a wrapper script should be created for each job.
			The only task of this wrapper script is to change the permissions of the executable
			before its execution.
		    </para>
		</glossdef>
	    </glossentry>
	    <glossentry>
		<glossterm><envar>beswebservice.wrapperscript.filename</envar></glossterm>
		<glossdef>
		    <para>
			This value contains the filename that should be used for creating wrapper scripts.
			The created wrapper script always receives the job's identifier as postfix.
		    </para>
		</glossdef>
	    </glossentry>
	    <glossentry>
		<glossterm><envar>beswebservice.wrapperscript.basedir</envar></glossterm>
		<glossdef>
		    <para>
			This value contains the path where wrapper script should be created. This path must
			be within the <envar>ftpserver.basedir</envar> directory.
		    </para>
		</glossdef>
	    </glossentry>
	</glosslist>
    </refsect1>

    <refsect1>
	<title>OPTIONS FOR THE EC2 CLOUD PLUGIN</title>
	<para>
	    The EC2 Cloud plugin ("EC2") allows to instantiate on-demand resources from any Amazon EC2 compatible cloud (currently Amazon EC2, Eucalyptus and OpenStack are known to work). It uses the Amazon EC2 API tools (Java) or Euca2ools, and requires either one to be deployed and accessible. It has the following configuration options.
	</para>
	<glosslist>
	    <glossentry>
		<glossterm><envar>ec2-tool-type</envar></glossterm>
		<glossdef>
		    <para>
			The toolset to be used to communicate with the cloud fabric of choice (currently Amazon EC2, Eucalyptus and OpenStack are known to work). Can be either set to 'ec2-api-tools' or 'euca2ools'. Requires the correct tool to be installed at the location indicated by 'ec2-home' parameter.
		    </para>
		</glossdef>
	    </glossentry>
	    <glossentry>
		<glossterm><envar>user-data</envar></glossterm>
		<glossdef>
		    <para>
			A string that contains data that is going to be made available for each cloud instance. Mutually exclusive with 'user-data-file'.
		    </para>
		</glossdef>
	    </glossentry>
	    <glossentry>
		<glossterm><envar>user-data-file</envar></glossterm>
		<glossdef>
		    <para>
			A path to a file that is going to be made available for each cloud instance. Mutually exclusive with 'user-data'.
		    </para>
		</glossdef>
	    </glossentry>
	    <glossentry>
		<glossterm><envar>region</envar></glossterm>
		<glossdef>
		    <para>
			Data center to request instances from (e.g.: 'eu-west-1' for Amazon EC2 or 'public' for Eucalyptus). Required parameter for ec2-api-tools.
		    </para>
		</glossdef>
	    </glossentry>
	    <glossentry>
		<glossterm><envar>ec2-certificate</envar></glossterm>
		<glossdef>
		    <para>
			Amazon EC2 certificate path. Value usually set in the EC2_CERT environment variable. Required parameter for ec2-api-tools.
		    </para>
		</glossdef>
	    </glossentry>
	    <glossentry>
		<glossterm><envar>ec2-private-key</envar></glossterm>
		<glossdef>
		    <para>
			Amazon EC2 private key path. Value usually set in the EC2_PRIVATE_KEY environment variable. Required parameter both for ec2-api-tools.
		    </para>
		</glossdef>
	    </glossentry>
	    <glossentry>
		<glossterm><envar>ec2-home</envar></glossterm>
		<glossdef>
		    <para>
			Path to the Amazon EC2 API command line tools. Value usually set in the EC2_HOME environment variable. For Eucalyptus version 1.3-30349 of the ec2-api-tools is required ('ec2-api-tools-1.3-30349'), or euca2ools can be used also. Required parameter both for ec2-api-tools and euca2ools.
		    </para>
		</glossdef>
	    </glossentry>
	    <glossentry>
		<glossterm><envar>java-home</envar></glossterm>
		<glossdef>
		    <para>
			Location of the Java Runtime Environment (JRE). Value usually set in the JAVA_HOME environment variable. Required parameter both for ec2-api-tools and euca2ools.
		    </para>
		</glossdef>
	    </glossentry>
	    <glossentry>
		<glossterm><envar>ec2-service-url</envar></glossterm>
		<glossdef>
		    <para>
			Service endpoint for Amazon EC2 (Eucalyptus, OpenStack). Value usually set in the EC2_URL environment variable. Required for Eucalyptus when using ec2-api-tools and for euca2ools.
		    </para>
		</glossdef>
	    </glossentry>
	</glosslist>
    </refsect1>

    <refsect1>
      <title>OPTIONS FOR THE NULL PLUGIN</title>
      
      <glosslist>
	<glossentry>
	  <glossterm><envar>failurePercent</envar></glossterm>
	  <glossdef>
	    <para>
	      Percentage; handled jobs' will fail with this probability. The
	      value must be an integer between 0 and 100 (inclusive).
	    </para>
	    <para>
		Optional, default value is 0. (No job will fail.)
	    </para>
	  </glossdef>
	</glossentry>
      </glosslist>
    </refsect1>

    <refsect1>
      <title>OPTIONS FOR THE METAJOB PLUGIN</title>
      
      <glosslist>
	<glossentry>
	  <glossterm><envar>maxJobsAtOnce</envar></glossterm>
	  <glossdef>
	    <para>
	      Integer; unfolding of a meta-job is suspended after generating so
	      many sub-jobs, yielding up control to other plugins. Required. The
	      value 0 means infinity.
	    </para>
	  </glossdef>
	</glossentry>
      </glosslist>
    </refsect1>

    <refsect1>
	<title>SEE ALSO</title>
	<para>
	    <citerefentry><refentrytitle>3g-bridge</refentrytitle><manvolnum>8</manvolnum></citerefentry>,
	    <citerefentry><refentrytitle>injector</refentrytitle><manvolnum>1</manvolnum></citerefentry>,
	    <citerefentry><refentrytitle>wsmonitor</refentrytitle><manvolnum>8</manvolnum></citerefentry>,
	    <citerefentry><refentrytitle>wssubmitter</refentrytitle><manvolnum>8</manvolnum></citerefentry>
	</para>
    </refsect1>

</refentry>
<!-- vim: set ai sw=4: -->
