3G Bridge implementing BOINC -> EGEE bridging
=============================================


1. Requirements
---------------
The BOINC -> EGEE bridge requires a machine meeting the following
specifications:
  o one CPU
  o at least 512M RAM recommended
  o at least 1G of free HDD space recommended
  o Scientific Linux 4.5 operating system
  o gLite User Interface installed and configured on the machine
  o MySQL server installed on the machine


2. How to use
-------------
In order to set up a BOINC -> EGEE bridge, you have to execute the following
steps:

  1. It is recommended to create a new user account that will run the bridge
      $ adduser bridge

  2. Provide access to this user to a new database on the MySQL server
      mysql> create database bridge;
      mysql> grant all privileges on bridge.*
             to bridge identified by 'some_password';

  3. Create necessary tables in the database and create a queue:
      $ mysql -u bridge -p bridge < doc/db/schema.sql
      mysql> insert into cg_algqueue(grid, alg, batchsize) \
             values('boincgrid', '', 10);
      Here, we create a queue for the plugin instance named 'boincgrid'
      that supports submitting at most 10 jobs in a collection.

  4. Configure the bridge:
  
  4a. Update database access informations in .../bridge.conf

  4b. Set up an EGEE plugin instance as the target in .../bridge.conf.
      You have to set up the following properties:
       o name of the plugin instance surrounded by '[' and ']': '[boincgrid]'
       o the plugin's type: 'handler = EGEE'
       o the VO name to use: 'voname = gilda'
       o the WMProxy endpoint for the VO
       o MyProxy setings for retrieving proxies

  4c. Set up the BOINC job source in .../bridge.conf.
      You have to set up the following properties:
      o a name for the job source surrounded by '[' and ']': '[jobwrapper]'
      o the target plugin instance to use: 'grid = boincgrid'
      o you may set other optional parameters such as logging
        otherwise defaults specified in the config file are used

  5. Now create a new empty directory for the BOINC jobwrapper client.
     Create a configuration file jobwrapper_client.xml in this directory
     Then, modify attribute values in this configuration file
     according to your settings:
     o location of the 3G Bridge config file: <jobwrapper_binary> tag
     o number of workunit/CPU slots to use: <cpu> tag
     o location of the bridge configuration file: <bidge_conf> tag
     o configuration section for this job source: <conf_section> tag
     An example jobwrapper_client.xml file is provided in the doc directory.

  6. Start the boinc_jobwrapper_client in this new directory, and attach to
     the requested BOINC project:
     $ .../boinc_jobwrapper_client --no_gui_rpc --attach_project <URL> <KEY>
     The BOINC jobwrapper client begins fetching workunits from the BOINC
     server and places them into the 3G Bridge Job Database.

  7. Start the bridge:
      $ .../bridge -c .../bridge.conf

In order to add a new BOINC -> EGEE path to the already running bridge, the
following steps must be executed:

  1. Step '4b.-6.' from above. Note: if you plan to use an already
     existing EGEE plugin instance for executing jobs from the new BOINC
     server, step '4b.' can be skipped.

  2. Stop the bridge, the following command stops a bridge running as a daemon
      $ .../bridge -c .../bridge.conf -k

  3. Start the bridge as in step '7.' from above.


3. Remarks
----------
It is recommended to start the different components either as a background
process or in a screen terminal. The bridge by defaults detaches from
the terminal and becomes a daemon. This can be changed with the -f option.
